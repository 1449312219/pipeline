apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: flux
spec:
  params:
    - name: apiserver-url
      default: https://kubernetes.default

    - name: git-labels
    - name: git-url
    - name: git-paths
      default: '""'
    - name: namespaces
      default: default
    - name: manifest-gen
      default: "true"
    - name: cluster-role
      default: flux
    - name: http-registry
    - name: sync-garbage
      default: "true"

  results:
  - name: ssh-key

  volumes:
  - name: workspace
    emptyDir: {}

  steps:
    - name: init
      image: inner-docker-registry:5000/busybox:1.31
      imagePullPolicy: IfNotPresent
      volumeMounts:
      - name: workspace
        mountPath: /workspace/flux
      script: |
        cd /workspace/flux

        cat > install.sh <<EOF
        set -ex
        
        gitLabel=\$1
        gitUrl=\$2
        gitPaths=\${3:-""}
        ns=\${4:-default}
        manifestGen=\${5:-true}
        clusterRole=\${6:-flux}
        httpRegistry=\${7:-inner-docker-registry:5000}
        syncGarbage=\${8:-false}
        
        
        # 创建命名空间
        kubectl get ns \${ns} >/dev/null 2>&1 || kubectl create ns \${ns}
        
        
        # 创建flux资源文件
        ./fluxctl install \\
        --git-url=\${gitUrl} \\
        --git-path=\${gitPaths} \\
        --manifest-generation=\${manifestGen} \\
        --namespace=\${ns} \\
        --git-user=robot \\
        --git-email=robot@users.noreply.github.com \\
        | sed -r '/^apiVersion: rbac\.authorization\.k8s\.io\/v1beta1\$/,/^---\$/d' \\
        > k/flux.yaml
        
        
        # 获取gitServer ssh公钥
        type ssh-keyscan 2>/dev/null \\
        && ssh-keyscan \$(echo \${gitUrl} \\
                    | sed -r 's|.*git@([^:/]+):?([^/]*)/.*|host=\1;port=\2;echo \${port:+-p \$port} \$host|e') \\
           2>/dev/null > k/ssh-config.yaml
        
        
        # 生成 flux + fluxcloud 资源文件
        kubectl apply -k k --dry-run=client -o yaml \\
        | sed -r -e "/image:/{ s|image:( *)docker.io/|image:\1|; s|image:( *)(.*)|image:\1\${httpRegistry}/\2| }" \\
                 -e "s|GIT_LABEL_PLACEHOLDER|\${gitLabel}|" \\
                 -e "s|NAMESPACE_PLACEHOLDER|\${ns}|" \\
                 -e "s|FLUX_CLUSTERROLE_PLACEHOLDER|\${clusterRole}|" \\
                 -e "s|HTTP_REGISTRYS_PLACEHOLDER|\${httpRegistry}|" \\
                 -e "s|SYNC_GARBAGE_PLACEHOLDER|\${syncGarbage}|" \\
        | kubectl apply -f - -n \${ns}
        
        
        # 打印 ssh-key
        kubectl wait -n \${ns} deployments --all --for=condition=Available --timeout=5m
        key=\$(./fluxctl identity --k8s-fwd-ns=\${ns} --k8s-fwd-labels="name=flux")
        key=\${key% *}
        echo \$key
        EOF
        chmod u+x /workspace/flux/install.sh


        mkdir k && cd k
        cat > flux-args-patch.yaml <<EOF
        
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --registry-insecure-host=HTTP_REGISTRYS_PLACEHOLDER
        
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --k8s-allow-namespace=NAMESPACE_PLACEHOLDER
        
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --k8s-default-namespace=NAMESPACE_PLACEHOLDER
        
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --git-label=GIT_LABEL_PLACEHOLDER
        
        - op: add
          path: /spec/template/spec/containers/0/args/-
          value: --sync-garbage-collection=SYNC_GARBAGE_PLACEHOLDER
        EOF
        cat > flux-role.yaml <<EOF
        apiVersion: rbac.authorization.k8s.io/v1beta1
        kind: RoleBinding
        metadata:
          labels:
            name: flux
          name: flux
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: FLUX_CLUSTERROLE_PLACEHOLDER
        subjects:
          - kind: ServiceAccount
            name: flux
        EOF
        cat > flux-ssh-config-patch.yaml <<EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: flux
        spec:
          template:
            spec:
              volumes:
              - name: ssh-config
                configMap:
                  name: flux-ssh-config
              containers:
              - name: flux
                volumeMounts:
                - name: ssh-config
                  mountPath: /root/.ssh
        EOF
        cat > flux.yaml <<EOF
        EOF
        cat > kustomization.yaml <<EOF
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
        - flux.yaml
        - flux-role.yaml
        
        patchesStrategicMerge:
        - flux-ssh-config-patch.yaml
        patchesJson6902:
        - target:
            group: apps
            version: v1
            kind: Deployment
            name: flux
          path: flux-args-patch.yaml
        
        configMapGenerator:
        - name: flux-ssh-config
          files:
          - known_hosts=ssh-config.yaml
        generatorOptions:
          disableNameSuffixHash: true
        
        namespace: NAMESPACE_PLACEHOLDER
        EOF
        cat > ssh-config.yaml <<EOF
        EOF

    - name: fluxctl
      image: inner-docker-registry:5000/fluxctl:1.20.1
      volumeMounts:
      - name: workspace
        mountPath: /workspace/flux
      script: |
        cp /usr/bin/fluxctl /workspace/flux/fluxctl

    - name: openssh
      image: inner-docker-registry:5000/lgatica/openssh-client:latest
      volumeMounts:
      - name: workspace
        mountPath: /workspace/flux
      script: |
        host=$(params.git-url)
        host=${host#*@}
        host=${host%%/*}
        port=${host#*:}
        host=${host%%:*}

        ssh-keyscan ${port:+-p $port} ${host} > /workspace/flux/k/ssh-config.yaml

    - name: flux
      image: inner-docker-registry:5000/lachlanevenson/k8s-kubectl
      imagePullPolicy: IfNotPresent
      volumeMounts:
      - name: workspace
        mountPath: /workspace/flux
      script: |
        url=$(params.apiserver-url)
        ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)

        kubectl config set-cluster default --server=$url --certificate-authority=$ca
        kubectl config set-credentials default --token=$token
        kubectl config set-context default --cluster=default --user=default --namespace=$namespace

        cd /workspace/flux

        function toArrayLength() {
          local i=0
          for value in $1; do
            i=$(expr $i + 1)
          done
          echo $i
        }
        function toArray() {
          local key=$1
          local values=$2
          local i=0
          for value in $values; do
            eval $key$i=$value
            i=$(expr $i + 1)
          done
        }
        size=$(toArrayLength "$(params.git-labels)")
        toArray gitLabels "$(params.git-labels)"
        toArray namespaces "$(params.namespaces)"
        toArray paths "$(params.git-paths)"


        i=0
        while test $i -lt $size; do
          eval gitLabel=\$$gitLabels$i
          eval ns=\$$namespaces$i
          eval path=\$\paths$i

          ./install.sh $gitLabel $(params.git-url) $path $ns                        $(params.manifest-gen) $(params.cluster-role) $(params.http-registry) $(params.sync-garbage) > .logs

          cat .logs
          echo $gitLabel $(tail -n 1 .logs) >> $(results.ssh-key.path)

          i=$(expr $i + 1)
        done
