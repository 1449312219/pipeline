apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: flux
spec:
  params:
    - name: apiserver-url
      default: https://kubernetes.default

    - name: git-url
    - name: git-paths
      default: '""'
    - name: webhook
    - name: envs
    - name: namespaces
      default: default
    - name: manifest-gen
      default: "true"
    - name: http-registry

  results:
  - name: ssh-key

  volumes:
  - name: workspace
    emptyDir: {}

  steps:
    - name: init
      image: busybox:1.31
      imagePullPolicy: IfNotPresent
      volumeMounts:
      - name: workspace
        mountPath: /workspace/flux
      script: |
        cd /workspace/flux

        cat > install.sh <<EOF
        set -ex
        
        gitUrl=\$1
        gitPaths=\${2:-""}
        webhook=\$3
        env=\$4
        ns=\${5:-default}
        manifestGen=\${6:-true}
        httpRegistry=\${7:-\$MASTER_IP:\$DOCKER_REGISTRY_PORT}
        
        
        # 创建命名空间
        kubectl get ns \${ns} >/dev/null 2>&1 || kubectl create ns \${ns}
        
        
        # 创建flux资源文件
        ./fluxctl install \\
        --git-url=\${gitUrl} \\
        --git-path=\${gitPaths} \\
        --manifest-generation=\${manifestGen} \\
        --namespace=\${ns} \\
        --git-user=robot \\
        --git-email=robot@users.noreply.github.com \\
        > k/flux.yaml
        
        
        # 获取gitServer ssh公钥
        type ssh-keyscan 2>/dev/null \\
        && ssh-keyscan \$(echo \${gitUrl} \\
                    | sed -r 's|.*git@([^:/]+):?([^/]*)/.*|host=\1;port=\2;echo \${port:+-p \$port} \$host|e') \\
           2>/dev/null > k/ssh-config.yaml
        
        
        # 生成 flux + fluxcloud 资源文件
        kubectl apply -k k --dry-run=client -o yaml \\
        | sed -r -e "/image:/{ s|image:( *)docker.io/|image:\1|; s|image:( *)(.*)|image:\1\${httpRegistry}/\2| }" \\
                 -e "s|WEBHOOK_URL_PLACEHOLDER|\${webhook}|" \\
                 -e "s|ENV_PLACEHOLDER|\${env}|" \\
                 -e "s|GITHUB_URL_PLACEHOLDER|\${gitUrl}|" \\
                 -e "s|NAMESPACE_PLACEHOLDER|\${ns}|" \\
                 -e "s|HTTP_REGISTRYS_PLACEHOLDER|\${httpRegistry}|" \\
        | kubectl apply -f - -n \${ns}
        
        
        # 打印 ssh-key
        kubectl wait -n \${ns} pod --all --for=condition=Ready --timeout=5m
        key=\$(./fluxctl identity --k8s-fwd-ns=\${ns} --k8s-fwd-labels="name=flux")
        key=\${key% *}
        echo \$key
        EOF
        chmod u+x /workspace/flux/install.sh


        mkdir k && cd k
        cat > flux-args-patch.yaml <<EOF
        
        - op: add
          path: /spec/template/spec/containers/1/args/-
          value: --connect=ws://127.0.0.1:3032
        
        - op: add
          path: /spec/template/spec/containers/1/args/-
          value: --registry-insecure-host=HTTP_REGISTRYS_PLACEHOLDER
        
        - op: add
          path: /spec/template/spec/containers/1/args/-
          value: --k8s-allow-namespace=NAMESPACE_PLACEHOLDER
        
        - op: add
          path: /spec/template/spec/containers/1/args/-
          value: --k8s-default-namespace=NAMESPACE_PLACEHOLDER
        
        - op: add
          path: /spec/template/spec/containers/1/args/-
          value: --git-label=ENV_PLACEHOLDER-flux
        EOF
        cat > fluxcloud-patch.yaml <<EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: flux
        spec:
          template:
            spec:
              containers:
              - name: fluxcloud
                image: kongshuai78/fluxcloud:v0.3.9
                ports:
                - containerPort: 3032
                env:
                - name: GITHUB_URL
                  value: GITHUB_URL_PLACEHOLDER
                - name: COMMIT_TEMPLATE
                  value: "{{ .VCSLink }}"
                - name: EXPORTER_TYPE
                  value: webhook
                - name: WEBHOOK_URL
                  value: WEBHOOK_URL_PLACEHOLDER
                - name: ADDITIONAL
                  value: ENV_PLACEHOLDER
                - name: LISTEN_ADDRESS
                  value: :3032
        EOF
        cat > flux-role-patch.yaml <<EOF
        
        - op: replace
          path: /metadata/name
          value:  flux-NAMESPACE_PLACEHOLDER
        
        EOF
        cat > flux-ssh-config-patch.yaml <<EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: flux
        spec:
          template:
            spec:
              volumes:
              - name: ssh-config
                configMap:
                  name: flux-ssh-config
              containers:
              - name: flux
                volumeMounts:
                - name: ssh-config
                  mountPath: /root/.ssh
        EOF
        cat > flux.yaml <<EOF
        EOF
        cat > kustomization.yaml <<EOF
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        resources:
        - flux.yaml
        
        patchesStrategicMerge:
        - flux-ssh-config-patch.yaml
        - fluxcloud-patch.yaml
        patchesJson6902:
        - target:
            group: apps
            version: v1
            kind: Deployment
            name: flux
          path: flux-args-patch.yaml
        - target:
            group: rbac.authorization.k8s.io
            version: v1beta1
            kind: ClusterRoleBinding
            name: flux
          path: flux-role-patch.yaml
         
        
        configMapGenerator:
        - name: flux-ssh-config
          files:
          - known_hosts=ssh-config.yaml
        generatorOptions:
          disableNameSuffixHash: true
        
        namespace: NAMESPACE_PLACEHOLDER
        EOF
        cat > ssh-config.yaml <<EOF
        EOF

    - name: fluxctl
      image: 10.1.40.43:5000/fluxctl:1.20.1
      volumeMounts:
      - name: workspace
        mountPath: /workspace/flux
      script: |
        cp /usr/bin/fluxctl /workspace/flux/fluxctl

    - name: openssh
      image: 10.1.40.43:5000/lgatica/openssh-client:latest
      volumeMounts:
      - name: workspace
        mountPath: /workspace/flux
      script: |
        host=$(params.git-url)
        host=${host#*@}
        host=${host%%/*}
        port=${host#*:}
        host=${host%%:*}

        ssh-keyscan ${port:+-p $port} ${host} > /workspace/flux/k/ssh-config.yaml

    - name: flux
      image: lachlanevenson/k8s-kubectl
      imagePullPolicy: IfNotPresent
      volumeMounts:
      - name: workspace
        mountPath: /workspace/flux
      script: |
        url=$(params.apiserver-url)
        ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)

        kubectl config set-cluster default --server=$url --certificate-authority=$ca
        kubectl config set-credentials default --token=$token
        kubectl config set-context default --cluster=default --user=default --namespace=$namespace

        cd /workspace/flux

        function toArrayLength() {
          local i=0
          for value in $1; do
            i=$(expr $i + 1)
          done
          echo $i
        }
        function toArray() {
          local key=$1
          local values=$2
          local i=0
          for value in $values; do
            eval $key$i=$value
            i=$(expr $i + 1)
          done
        }
        size=$(toArrayLength "$(params.envs)")
        toArray envs "$(params.envs)"
        toArray namespaces "$(params.namespaces)"
        toArray paths "$(params.git-paths)"


        i=0
        while test $i -lt $size; do
          eval env=\$$envs$i
          eval ns=\$$namespaces$i
          eval path=\$\paths$i

          ./install.sh $(params.git-url) $path  $(params.webhook) $env $ns                        $(params.manifest-gen) $(params.http-registry) > .logs

          cat .logs
          echo $env $(tail -n 1 .logs) >> $(results.ssh-key.path)

          i=$(expr $i + 1)
        done
