apiVersion: tekton.dev/v1alpha1
kind: Condition
metadata:
  name: env-selector    
spec:
  params:
    - name: url
      default: https://kubernetes.default

    - name: selector-name
    
    - name: candidate
      description:  候选者名称, 当选中时才可继续. 未修改选中者时,可重复进入.

    - name: await-count
      default: '0'
      description: 未能创建时,是否等待. 0,不等待,异常退出.
    - name: await-interval
      default: '15'
      description: 等待时间. (单位:秒)

  check:
    image: 10.1.40.43:5000/lachlanevenson/k8s-kubectl
    imagePullPolicy: IfNotPresent 
    script: |
        url=$(params.url)
        ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        token=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
        namespace=$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)

        kubectl="kubectl -s=$url --certificate-authority=$ca --token=$token -n $namespace"
        
        
        awaitCount=0
        function doAwait() {
          if test $awaitCount -ge $(params.await-count); then
            exit 1
          fi
          awaitCount=$(($awaitCount+1))
          sleep $(params.await-interval)
        }
        function onlyAwait() {
          sleep $(params.await-interval)
        }
        
        name=$(params.selector-name)
        manifest='apiVersion: v1
        kind: Endpoints
        metadata:
          name: '$name'
          annotations:
            selector: ""'          
        
        # init
        if result=$($kubectl create -f - 2>&1); then
          echo inited
        elif echo $result | grep AlreadyExists -v; then
          echo init error
          exit 1
        fi <<EOF
        $manifest
        EOF
        
        function getSelector() {
           $kubectl get endpoints $name -o jsonpath={.metadata.annotations.selector}
        }
        
        while true; do
          selector=$(getSelector)
          
          if test -z "$selector"; then
            onlyAwait
            continue
          fi
          
          if test "$selector" == "$(params.candidate)"; then
            exit
          fi
          
          doAwait
        done