apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: ${PURPOSE}branch-push
spec:
  serviceAccountName: trigger
  triggers:
  - name: pipeline
    interceptors:
    - cel:
        filter: "body.ref.indexOf('refs/heads/') == 0 && body.before != '0000000000000000000000000000000000000000'"
        overlays:
        - key: branch
          expression: "body.ref.replace('refs/heads/','')"
        - key: git-server
          # http://localhost:30280/root/test -> http://localhost:30280
          expression: "body.repository.html_url.substring(0, body.repository.html_url.indexOf('/',8))"
    bindings:
    - ref: branch-push-params-binding
    template:
      name: ${PURPOSE}promotion
---

apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: branch-push-params-binding
spec:
  params:
  - name: repo-full-name
    value: $(body.repository.full_name)
  - name: repo-url
    value: $(body.repository.ssh_url)
  - name: repo-branch
    value: $(body.branch)
  - name: repo-ref
    value: $(body.after)
  - name: git-server
    value: $(body.git-server)
---

apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: ${PURPOSE}promotion
spec:
  params:
  - name: repo-full-name
  - name: repo-url
  - name: repo-branch
  - name: repo-ref
  - name: git-server
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      name: ${PURPOSE}pr-$(uid)
    spec:
      pipelineRef:
        name: ${PURPOSE}promotion
      serviceAccountName: pipeline
      params:
      - name: repo-full-name
        value: $(params.repo-full-name)
      - name: repo-url
        value: $(params.repo-url)
      - name: repo-branch
        value: $(params.repo-branch)
      - name: repo-ref
        value: $(params.repo-ref)
      - name: src-root
        value: api-gateway
      - name: git-server
        value: $(params.git-server)
