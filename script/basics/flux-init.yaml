apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: flux-init
spec:
  params:
  - name: repo-url
    description: 资源项目仓库URL
  - name: repo-full-name
    description: 资源项目ID (用以部署deploy-key)
  - name: git-server
    description: git server host (如:http://localhost:30280)

  - name: paths
    description: 需在资源项目仓库内创建的目录 (用以存放环境配置)
  - name: namespaces
    description: 需创建的命名空间 (用以由flux部署环境资源)
  - name: webhook
    description: 回调地址 (用以flux部署环境资源成功后回调)

  - name: cluster-role
    description: ClusterRole name, 将绑定到flux

  workspaces:
  - name: workspace
    description: 存储yaml仓库内容
  - name: add
    description: 存储待修改内容
  - name: token
    description: 存储gitea user token (于/token文件)

  tasks:
  - name: has-ns
    taskRef:
      kind: ClusterTask
      name: ns-opt
    params:
    - name: opt
      value: has
    - name: names
      value: $(params.namespaces)
      
  - name: fetch-flux-config-repo
    runAfter:
    - has-ns
    conditions:
    - conditionRef: exist
      params:
      - name: negate
        value: "true"
      - name: content
        value: $(tasks.has-ns.results.has)
      - name: expect
        value: " true"
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: workspace
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: master
    - name: deleteExisting
      value: 'true'

  - name: create-env-config
    runAfter:
    - fetch-flux-config-repo
    taskRef:
      kind: ClusterTask
      name: git-add
    workspaces:
    - name: workspace
      workspace: workspace
    - name: add
      workspace: add
    params:
    - name: script-params
      value: $(params.paths)
    - name: message
      value: create env configs

  - name: create-ns
    runAfter:
    - create-env-config
    taskRef:
      kind: ClusterTask
      name: ns-opt
    params:
    - name: opt
      value: create
    - name: names
      value: $(params.namespaces)

  - name: init-flux-env
    runAfter:
    - create-ns
    taskRef:
      kind: ClusterTask
      name: flux
    params:
    - name: git-url
      value: $(params.repo-url)
    - name: webhook
      value: $(params.webhook)
    - name: envs
      value: $(params.namespaces)
    - name: namespaces
      value: $(params.namespaces)
    - name: git-paths
      value: $(params.paths)
    - name: cluster-role
      value: $(params.cluster-role)
    - name: http-registry
      value: 10.1.40.43:5000 

  - name: prepare-deploy-key-args
    taskSpec:
      steps:
      - image: 10.1.40.43:5000/busybox:1.31
        script: |
          while read env key; do
            test -n "$env" && echo $(params.project) $env \"$key\" >> $(results.args.path) || true
          done <<EOF
          $(params.keys)
          EOF
      params:
      - name: keys
      - name: project
      results:
      - name: args
    params:
    - name: keys
      value: $(tasks.init-flux-env.results.ssh-key) 
    - name: project
      value: $(params.repo-full-name)

  - name: init-deploy-key
    taskRef:
      kind: ClusterTask
      name: gitea
    params:
    - name: git-server
      value: $(params.git-server)
    - name: cmd
      value: addDeployKey
    - name: args
      value: $(tasks.prepare-deploy-key-args.results.args)
    workspaces:
    - name: token
      workspace: token
