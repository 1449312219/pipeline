apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: branch-push-pipeline-wrapper
spec:
  params:
  - name: job-id
    description: 任务ID,串联起所有子流水线

  - name: env-version
    description: env version, 用于关联具体env
    default: "0.1.1"
    
  - name: repo-full-name
    description: git仓库名称, 用于执行gitea请求 (创建工单,评论)
  - name: repo-branch
    description: git仓库分支
  - name: repo-ref
    description: git仓库SHA
  - name: repo-url
    description: git仓库URL

  - name: git-server-http
    description: git server host (如:http://localhost:30280)


  workspaces:
  - name: pipelines
    description: |
      由job-id分离各流水线数据目录
      结构: temporary/project-repo
                      manifest-repo
            persistent/
  - name: gitea-user-token


  tasks:
  - name: get-promotion-name
    taskRef:
      kind: ClusterTask
      name: promotion-config
    params:
    - name: opt
      value: get
    - name: branch
      value: $(params.repo-branch)

  - name: get-issue-id
    taskRef:
      kind: ClusterTask
      name: gitea
    params:
    - name: git-server
      value: $(params.git-server-http)
    - name: cmd
      value: getIssueId
    - name: args
      value: |
        $(params.repo-full-name) $(tasks.get-promotion-name.results.promotion-name)-$(params.env-version)-pipeline
    workspaces:
    - name: token
      workspace: gitea-user-token
      
  - name: fetch-repo
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: pipelines
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: $(params.repo-ref)
    - name: subdirectory
      value: $(params.job-id)/temporary/project-repo
    - name: deleteExisting
      value: "true"
      
  - name: params
    taskSpec:
      workspaces:
      - name: pipelines
      results:
      - name: pipelines-claim
      steps:
      - image: 10.1.40.43:5000/busybox:1.31
        script: |
          echo -n $(workspaces.pipelines.claim) > $(results.pipelines-claim.path)
    workspaces:
    - name: pipelines
      workspace: pipelines
      
  - name: trigger
    runAfter:
    - fetch-repo
    taskRef:
      kind: ClusterTask
      name: pipelinerun-apply
    params:
    - name: name
      value: $(context.pipelineRun.name)-trigger-$(tasks.get-promotion-name.results.promotion-name)
    - name: spec
      value: |
        pipelineRef:
          name: promotion-$(tasks.get-promotion-name.results.promotion-name)
        serviceAccountName: pipeline
        workspaces:
        - name: pipeline 
          persistentVolumeClaim:
            claimName: $(tasks.params.results.pipelines-claim)
          subPath: $(params.job-id)
        params:
        - name: job-id
          value: "$(params.job-id)"
        - name: promotion-name
          value: "$(tasks.get-promotion-name.results.promotion-name)"
        - name: env-version
          value: "$(params.env-version)"
        - name: repo-full-name
          value: "$(params.repo-full-name)"
        - name: repo-branch
          value: "$(params.repo-branch)"
        - name: repo-ref
          value: "$(params.repo-ref)"
        - name: repo-url
          value: $(params.repo-url)
        - name: git-server-http
          value: $(params.git-server-http)
        - name: issue-id
          value: "$(tasks.get-issue-id.results.output)"