apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-wrapper
spec:
  params:
  - name: repo-url
    description: git仓库URL
  - name: repo-full-name
    description: git仓库名称, 用于执行gitea请求 (创建工单,评论)
  - name: repo-ref
    description: git仓库SHA
  - name: version
    description: 当前项目版本
  - name: before-env
  - name: env

  - name: pipelinerun-name
  - name: pipelinerun-spec

  - name: notify
    description: 通知内容 (将指定内容写入gitea-comment)
    default: ""

  workspaces:
  - name: project 
    description: 项目git根目录, 全局pipelinerun传递, 作为后续步骤的数据来源
  - name: gitea-user-token

  tasks:
  - name: fetch-repo
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: project 
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: $(params.repo-ref)
    - name: deleteExisting
      value: 'true'

  - name: has-tags
    runAfter:
    - fetch-repo
    taskSpec:
      workspaces:
      - name: project
      params:
      - name: commit
      - name: pattern
      results:
      - name: output
      steps:
      - image: 10.1.40.43:5000/alpine/git:1.0.17
        workingDir: $(workspaces.project.path)
        script: |
          ln -sb $HOME/.ssh /root
          git fetch --tags
          git tag -l '$(params.pattern)' --format='%(object)' \
          | grep $(params.commit) 2>/dev/null | xargs echo -n > $(results.output.path)
    workspaces:
    - name: project 
      workspace: project 
    params:
    - name: commit
      value: $(params.repo-ref)
    - name: pattern
      value: $(params.version)_$(params.env)_pass_$(params.repo-ref)

  - name: trigger
    conditions:
    - conditionRef: test
      params:
      - name: arg
        value: '-z $(tasks.has-tags.results.output)'
    taskRef:
      name: pipelinerun-apply
    params:
    - name: name
      value: $(params.pipelinerun-name)
    - name: spec
      value: $(params.pipelinerun-spec)
    - name: return-task
      value: fetch-repo

  - name: create-tag
    taskRef:
      name: git-tag
    workspaces:
    - name: workspace
      workspace: project
    params:
    - name: tag
      value: $(params.version)_$(params.env)_pass_$(params.repo-ref)
    - name: msg
      value: $(tasks.trigger.results.output)

  - name: version-context
    runAfter:
    - create-tag 
    conditions:
    - conditionRef: test
      params:
      - name: arg
        value: $(params.notify)
    taskSpec:
      volumes:
      - name: context
        configmap:
          name: pipeline-context
      steps:
      - image: busybox:1.31
        volumeMounts:
        - name: context
          mountPath: /volumes/context
        script: |
          cd /volumes/context
          echo -n $(cat id) > $(results.issue-id.path)
      results:
      - name: issue-id

  - name: notify
    taskRef:
      name: gitea
    params:
    - name: cmd
      value: createComment
    - name: args
      value: |
        $(params.repo-full-name) $(tasks.version-context.results.issue-id) \
        '$(params.notify)'
    workspaces:
    - name: token
      workspace: gitea-user-token
      subPath: token
