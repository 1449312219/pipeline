apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-wrapper
spec:
  params:
  - name: work-id
    description: all-workspaces-pvc内唯一子目录,作为workspace根目录(伪pvc)
  - name: repo-url
    description: git仓库URL
  - name: repo-full-name
    description: git仓库名称, 用于执行gitea请求 (创建工单,评论)
  - name: repo-ref
    description: git仓库SHA
  - name: version
    description: 当前程序版本 (仅指定版本时, 附加images信息 + issue-comment)
    default:
  - name: before-env
  - name: env
  - name: src-root
    description: 代码根目录
    default:  

  - name: pipelinerun-name
  - name: pipelinerun-spec

  workspaces:
  - name: all-workspaces
    description: |
      workspace根, 提供独立path,成workspace, 供各PipelineRun执行
  - name: workspace
    description: |
      存储输入资源, 作为后续步骤的数据来源/结果数据
  - name: gitea-user-token


  tasks:
  - name: fetch-repo
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: workspace
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: $(params.repo-ref)
    - name: deleteExisting
      value: 'true'

  - name: has-tags
    runAfter:
    - fetch-repo
    taskSpec:
      workspaces:
      - name: workspace
      params:
      - name: commit
      - name: pattern
      results:
      - name: output
      steps:
      - image: 10.1.40.43:5000/alpine/git:1.0.17
        workingDir: $(workspaces.workspace.path)
        script: |
          ln -sb $HOME/.ssh /root
          git fetch --tags
          git tag -l '$(params.pattern)' --format='%(object)' \
          | grep $(params.commit) 2>/dev/null | xargs echo -n > $(results.output.path)
    workspaces:
    - name: workspace
      workspace: workspace
    params:
    - name: commit
      value: $(params.repo-ref)
    - name: pattern
      value: $(params.version)_$(params.env)_pass_$(params.repo-ref)

  - name: trigger
    conditions:
    - conditionRef: test
      params:
      - name: arg
        value: '-z $(tasks.has-tags.results.output)'
    taskRef:
      name: pipelinerun-apply
    params:
    - name: name
      value: $(params.pipelinerun-name)
    - name: spec
      value: $(params.pipelinerun-spec)
    - name: return-task
      value: fetch-repo

  - name: create-tag
    taskRef:
      name: git-tag
    workspaces:
    - name: workspace
      workspace: workspace
    params:
    - name: tag
      value: $(params.version)_$(params.env)_pass_$(params.repo-ref)
    - name: msg
      value: $(tasks.trigger.results.output)
