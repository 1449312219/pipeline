apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: env-init
spec:
  params:
  - name: promotion-name
    description: promotion name
  - name: env-version
    description: env version, 用于关联具体env
    
  - name: env
    
  - name: repo-full-name
    description: git仓库名称
  - name: manifest-repo-url
    description: 资源项目仓库URL
  - name: manifest-repo-full-name
    description: 资源项目ID (用以部署deploy-key)
    
  - name: git-server-http
    description: git server host (如:http://localhost:30280)
    
  - name: await-count
    default: '1440'
  - name: await-interval
    default: '30'

  workspaces:
  - name: workspace
    description: 存储yaml仓库内容
  - name: add
    description: 存储待修改内容
  - name: token
    description: 存储gitea user token (于/token文件)

  tasks:
  - name: params
    taskSpec:
      steps:
      - image: 10.1.40.43:5000/busybox:1.31
        script: |
          echo -n $(params.promotion-name)-$(params.env-version)/$(params.env) \
          > $(results.monitored-git-path.path)
          
          
          function parseToNameSpace() {
            local value=$1
            # [a-z0-9]([-a-z0-9]*[a-z0-9])?
            echo $value | tr /[A-Z]. -[a-z]- | grep '[^-].*[^-]' -o | xargs echo -n
          }
          parseToNameSpace $(params.namespace-prefix)-$(params.promotion-name)-$(params.env-version)-$(params.env) \
          > $(results.env-namespace.path)
          
          
          function parseToCluserRoleName() {
            local value=$1
            echo $value | tr / - | xargs echo -n
          }
          parseToCluserRoleName promotion-pipelines:env-init:$(params.repo-full-name)-flux \
          > $(results.flux-cluster-role.path)
      params:
      - name: promotion-name
      - name: env-version
      - name: env
      - name: namespace-prefix
      - name: repo-full-name
      results:
      - name: monitored-git-path
        description: flux将监视的资源仓库目录, 用以存放当前环境配置
      - name: env-namespace
        description: 环境的命名空间, 用以存放flux+项目实例
      - name: flux-cluster-role
        description: ClusterRole name, 将绑定到flux
    params:
    - name: promotion-name
      value: $(params.promotion-name)
    - name: env-version
      value: $(params.env-version)
    - name: env
      value: $(params.env)
    - name: namespace-prefix
      value: $(context.pipelineRun.namespace)
    - name: repo-full-name
      value: $(params.repo-full-name)

  - name: has-ns
    conditions:
    - conditionRef: env-lock
      params:
      - name: lock-name
        value: $(params.promotion-name).$(params.env-version).$(params.env).env-init
      - name: owner-name
        value: env-init
      - name: await-count
        value: $(params.await-count)
      - name: await-interval
        value: $(params.await-interval)
    taskRef:
      kind: ClusterTask
      name: ns-opt
    params:
    - name: opt
      value: has
    - name: names
      value: $(tasks.params.results.env-namespace)
      
  - name: fetch-manifest-repo
    runAfter:
    - has-ns
    conditions:
    - conditionRef: exist
      params:
      - name: negate
        value: "true"
      - name: content
        value: $(tasks.has-ns.results.has)
      - name: expect
        value: " true"
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: workspace
    params:
    - name: url
      value: $(params.manifest-repo-url)
    - name: revision
      value: master
    - name: deleteExisting
      value: 'true'

  - name: create-env-config
    runAfter:
    - fetch-manifest-repo
    taskRef:
      kind: ClusterTask
      name: git-add
    workspaces:
    - name: workspace
      workspace: workspace
    - name: add
      workspace: add
    params:
    - name: script-params
      value: $(tasks.params.results.monitored-git-path)
    - name: message
      value: create env configs

  - name: create-ns
    runAfter:
    - create-env-config
    taskRef:
      kind: ClusterTask
      name: ns-opt
    params:
    - name: opt
      value: create
    - name: names
      value: $(tasks.params.results.env-namespace)

  - name: init-flux-env
    runAfter:
    - create-ns
    taskRef:
      kind: ClusterTask
      name: flux
    params:
    - name: git-url
      value: $(params.manifest-repo-url)
    - name: envs
      value: $(tasks.params.results.env-namespace)
    - name: namespaces
      value: $(tasks.params.results.env-namespace)
    - name: git-paths
      value: $(tasks.params.results.monitored-git-path)
    - name: cluster-role
      value: $(tasks.params.results.flux-cluster-role)
    - name: http-registry
      value: 10.1.40.43:5000 

  - name: prepare-deploy-key-args
    taskSpec:
      steps:
      - image: 10.1.40.43:5000/busybox:1.31
        script: |
          while read env key; do
            test -n "$env" && echo $(params.project) $env \"$key\" >> $(results.args.path) || true
          done <<EOF
          $(params.keys)
          EOF
      params:
      - name: keys
      - name: project
      results:
      - name: args
    params:
    - name: keys
      value: $(tasks.init-flux-env.results.ssh-key) 
    - name: project
      value: $(params.manifest-repo-full-name)

  - name: init-deploy-key
    taskRef:
      kind: ClusterTask
      name: gitea
    params:
    - name: git-server
      value: $(params.git-server-http)
    - name: cmd
      value: addDeployKey
    - name: args
      value: $(tasks.prepare-deploy-key-args.results.args)
    workspaces:
    - name: token
      workspace: token
    
  finally:
  - name: release-lock
    taskRef:
      kind: ClusterTask
      name: env-lock-release
    params:
    - name: lock-name
      value: $(params.promotion-name).$(params.env-version).$(params.env).env-init
    - name: owner-name
      value: env-init