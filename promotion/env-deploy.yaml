apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: env-deploy
spec:
  params:
  - name: job-id
    description: 任务ID,串联起所有子流水线
  - name: pipelines-claim
    description: pipelines-pvc claim, 用于传递给启动的pipelinerun

  - name: env

  - name: promotion-name
    description: promotion name
  - name: env-version
    description: env version, 用于关联具体env

  - name: repo-full-name
    description: git仓库名称, 用于执行gitea请求 (创建工单,评论)
#  - name: repo-branch
#    description: git仓库分支
  - name: repo-ref
    description: git仓库SHA
#  - name: repo-url
#    description: git仓库URL

  - name: manifest-repo-full-name
    description: 资源仓库名称
  - name: manifest-repo-url
    description: 资源仓库URL

  - name: git-server-http
    description: git server host (如:http://localhost:30280)

  - name: deploy-webhook
    description: 部署成功后通知

  - name: await-count
    default: '1440'
  - name: await-interval
    default: '30'
    
  workspaces:
  - name: pipeline
  - name: gitea-user-token


  tasks:
  - name: env-init
    taskRef:
      kind: ClusterTask
      name: pipelinerun-apply
    params:
    - name: span-id
      value: "$(params.job-id)"
    - name: name
      value: $(context.pipelineRun.name)-env-init
    - name: spec
      value: |
        pipelineRef:
          name: env-init
        serviceAccountName: pipeline
        serviceAccountNames:
        - taskName: init-flux-env
          serviceAccountName: init-flux-env
        workspaces:
        - name: workspace
          persistentVolumeClaim:
            claimName: $(params.pipelines-claim)
          subPath: $(params.job-id)/temporary/manifest-repo
        - name: add
          configmap:
            name: env-manifest
        - name: token
          secret:
            SecretName: gitea-user-token
        params:
        - name: promotion-name
          value: $(params.promotion-name)
        - name: env-version
          value: $(params.env-version)
        - name: env
          value: $(params.env)
        - name: repo-full-name
          value: $(params.repo-full-name)
        - name: manifest-repo-url
          value: $(params.manifest-repo-url)
        - name: manifest-repo-full-name
          value: $(params.manifest-repo-full-name)
        - name: git-server-http
          value: $(params.git-server-http)
        - name: webhook
          value: $(params.deploy-webhook)
          
  - name: env-lock-name
    taskSpec:
      steps:
      - image: busybox:1.31
        script: |
          echo -n "$(params.lock-name)" > $(results.output.path)
      results:
      - name: output
      params:
      - name: lock-name
    params:
    - name: lock-name
      value: $(params.promotion-name).$(params.env-version).$(params.env).env-deploy
  - name: tag-deploy-images
    runAfter:
    - env-init
    conditions:
    - conditionRef: env-lock
      params:
      - name: lock-name
        value: $(tasks.env-lock-name.results.output)
      - name: owner-name
        value: $(params.job-id)
      - name: await-count
        value: $(params.await-count)
      - name: await-interval
        value: $(params.await-interval)
    taskRef:
      kind: ClusterTask
      name: kaniko-batch
    workspaces:
    - name: source
      workspace: pipeline
      subPath: temporary/project-repo
    params:
    - name: dest-prefix
      value: 10.1.40.43:5000/$(params.repo-full-name)/
    - name: dest-suffix
      value: ":$(params.repo-ref)"
      
  - name: await-deploy-success
    runAfter:
    - tag-deploy-images
    taskRef:
      kind: ClusterTask
      name: flux-deploy-await
    params:
    - name: expect-images
      value: $(tasks.tag-deploy-images.results.image-names)
    - name: deployed-namespace
      value: $(context.pipelineRun.namespace)-$(params.promotion-name)-$(params.env-version)-$(params.env)
    - name: await-count
      value: $(params.await-count)
    - name: await-interval
      value: $(params.await-interval)
